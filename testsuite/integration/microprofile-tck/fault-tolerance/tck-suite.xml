<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2019, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->
<suite name="microprofile-fault-tolerance-tck" verbose="10" configfailurepolicy="continue">
    <test name="microprofile-fault-tolerance-tck">
        <packages>
            <package name="org.eclipse.microprofile.fault.tolerance.tck.*"/>
        </packages>
        <classes>
            <!-- https://github.com/eclipse/microprofile-fault-tolerance/issues/408 -->
            <class name="org.eclipse.microprofile.fault.tolerance.tck.TimeoutUninterruptableTest">
                <methods>
                    <exclude name="testTimeout"/>
                </methods>
            </class>
            <!--
            Alternative to workaround in org.wildfly.extension.microprofile.faulttolerance.tck.WildFlyDeploymentExceptionTransformer:
            Exclude these classes as they rely on a @ShouldThrowException(DeploymentException.class)
            that is not working with Arquillian WildFly container (https://issues.jboss.org/browse/WFARQ-59)
            -->
            <!--
            <class name="org.eclipse.microprofile.fault.tolerance.tck.fallbackmethod.FallbackMethodOutOfPackageTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.fallbackmethod.FallbackMethodSubclassTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.fallbackmethod.FallbackMethodSuperclassPrivateTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.fallbackmethod.FallbackMethodWildcardNegativeTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.illegalConfig.IncompatibleFallbackMethodTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.illegalConfig.IncompatibleFallbackMethodWithArgsTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.illegalConfig.IncompatibleFallbackPolicies">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.illegalConfig.IncompatibleFallbackTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidAsynchronousClassTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidAsynchronousMethodTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidBulkheadAsynchQueueTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidBulkheadValueTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidCircuitBreakerDelayTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidCircuitBreakerFailureRatioNegTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidCircuitBreakerFailureRatioPosTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidCircuitBreakerFailureReqVol0Test">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidCircuitBreakerFailureReqVolNegTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidCircuitBreakerFailureSuccess0Test">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidCircuitBreakerFailureSuccessNegTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidRetryDelayDurationTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidRetryDelayTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidRetryJitterTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidRetryMaxRetriesTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            <class name="org.eclipse.microprofile.fault.tolerance.tck.invalidParameters.InvalidTimeoutValueTest">
                <methods>
                    <exclude name=".*"/>
                </methods>
            </class>
            -->
        </classes>
    </test>
</suite>